#fibonacci number in c++
#print 0 1 1 2 3 5 8 13 21 34

#include < iostream>
using namespace std;

int main() {

int a = 0;
int b = 1;

cout << a << " " <<b<< " " ;
for (int i = 1; i < = 10; i++)
{
int c = a + b;

cout << c << " ";
 a = b;
 b = c'
 
 }
 
 
 }

#1281. Subtract the Product and Sum of Digits of an Integer


class Solution {
public:
    int subtractProductAndSum(int n) {
        int prod = 1;
        int sum = 0;
        while(n!= 0){
            int digit= n%10;
            prod = prod * digit;
            sum = sum + digit;
            n = n / 10;
        }
        int answer = prod - sum ;
        return answer;
            
        }
        
    
};





##191. Number of 1 Bits
Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).
Input: n = 00000000000000000000000000001011
Output: 3
Explanation: The input binary string 00000000000000000000000000001011 has a total of three '1' bits.
class Solution {
public:
    int hammingWeight(uint32_t n) {
        
       int count = 0;
        while (n != 0){
         if (n & 1)
         {
             count++;
         }
           n = n >>1;
        }
    
 return count;
    }
};
